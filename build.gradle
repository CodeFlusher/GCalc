import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {

    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20-Beta2'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
//    id 'com.faire.gradle.analyze' version "1.0.9"
}

jar {
    manifest {
        attributes(
                'Main-Class': 'me.codeflusher.gcalc.GCalcCore'
        )
    }

}

kotlin.compilerOptions.jvmTarget.set(JvmTarget.JVM_1_8)
java.sourceCompatibility = JavaVersion.VERSION_1_8

project.ext.lwjglVersion = "3.2.3"
project.ext.jomlVersion = "1.10.0"
project.ext.jomlPrimVersion = "1.10.0"

project.ext.lwjglNatives = "natives-windows"


group = 'me.codeflusher'
version = '1.0'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')

    implementation 'com.google.code.gson:gson:2.10.1'

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.joml:joml:${jomlVersion}"

    implementation 'com.github.orange451:LWJGUI:pre-mt'

    implementation "net.objecthunter:exp4j:0.4.8"

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-nanovg"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"

//    shadowRuntimeElements("org.lwjgl:lwjgl::$lwjglNatives")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}


test {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(8)
}

tasks.configureEach{
    if (hasProperty("duplicatesStrategy")){
        setProperty("duplicatesStrategy", DuplicatesStrategy.INCLUDE)
    }
}
